## Auth
[-] Get rid of redis stuff in app.service maybe??
[-] For sake of update profile add satisfying on of JwtUpdateGuard or JwtAuthGuard to be enough
[X] In order to update me request body should not have to satisfy signUp user Dto
[X] Add CI pipe
[X] Turn off cookie-session secure on test env
[X] Email signUp nodeMailer
[X] Translate to Joi validation instead of class validators
[X] Do not import whole third party module [X] Generate session also on signUp maybe refactor create and send { session } process [] Random/Related algorithm in order to create username [X] Enhance swagger docs
[X] Test cancel google signIn manually
[X] Figure out how to not download mongoDb memory and other dev-dependency on docker build stage
[X] Setup Test setup to 1. start memory mongo before all 2.delete mongoose collections before each 2. close db connections after all [] Should we include refresh token? [X] Forget password implementation
[X] Are we need a generic is logged in middleware and are we need req.currentUser?
[X] Are we need a generic reject if req.currentUser not defined?
[X] Google OAuth2
[] Handle multiple signUp forgotPassword for same user at the same time
[] Dto validation message content is really bad "\"repeatPassword\" must be [ref:password]"
[X] Username and Password regex env var
[] User proper approach to updating the picture
[] Set JWT expiry 

## Ticket
[X] Faking create cookie test function (Buffer.from(JSON.stringify(jwt.sign(payload)).toString(base64)))
[X] Add reasonable sets of attribute to ticket model
[X] Implement to proper approach of uploading image and etc...
[X] Fix git issue
[X] Handle The case that ticket successfully created or updated but event not emitted by recording event in a separate table and database transaction and vice versa 
[X] Should I mock nats-wrapper? If use jest.fn to track publish event expectations not to forgot clear all mocks
[X] Add 'Is mock stan called?' test
[X] Why I'm even saving stan-events?
[X] We're not storing event-subject
[X] New Services unit tests
[] Maybe better test for database-transaction.service
[] Write optimistic concurrency control test
[] Hide ticket document version

## Order
[X] Notice **UTC** expiration date
[] Apply SG test _out of the sync create and update ticket(concurrency) issue_
[] Write optimistic concurrency control test
[] Hide order document version


## Common
[X] Fix import in common module
[X] Normal/consistence Response Error
[] i18n
[X] Add test coverage flag
[] README
[] Put together record/event diagram
[-] Use Nest @Component decorator for utility functions
[] Add typeDoc
[] Publish type-orm optimistic concurrency control package

## Models
[X] User model should contains password validation and user already exists logic
[X] Normal/consistence models e.g. in terms of mongoose user use toJSON to just includes id _not \_id_ and email _delete \_\_v and password_
[X] Swagger Joi Docs

## Client
[-] MAYBE Fix next finicky file change detection
[-] Next SSG and other (function running on client or server)
[X] Configure k8s cross nameSpace request to ingress-nginx service
[-] Set Host header to stub.dev in case of client server side request (use next req.headers)
[-] If we going with component.getInitialProps; Handle execution of child components getInitialProps and inject associated props
[X] Prevent from image loading resizing
[] User agreement and privacy notice signUp real links
[X] Fix SignUp mobile view
[X] Username and Password regex env var
[] Not Receiving email? try again page
[] A better default header
[] forgotPassword
[] End to end testing